<?php

class Bootstrap extends Zend_Application_Bootstrap_Bootstrap
{
    /*protected function _initView()
    {
        // Initialize view
        $view = new Zend_View();
        $view->doctype('XHTML1_STRICT');
        $view->headTitle('My First Zend Framework Application');

        // Add it to the ViewRenderer
        $viewRenderer = Zend_Controller_Action_HelperBroker::getStaticHelper(
            'ViewRenderer'
        );
        $viewRenderer->setView($view);

        // Return it, so that it can be stored by the bootstrap
        return $view;
    }*/

}





/** Include Path setzen */
/*set_include_path(	'../lib'.PATH_SEPARATOR.
dirname ( __FILE__ ) .'/modules/default/models'.PATH_SEPARATOR.
dirname ( __FILE__ ) .'/modules/default'.PATH_SEPARATOR.
dirname ( __FILE__ ) .'/modules/api/models'.PATH_SEPARATOR.
dirname ( __FILE__ ) .'/modules/test/models'.PATH_SEPARATOR.
get_include_path());
*/
/** Zend Basis Klasse laden */
//require_once 'Zend/Loader.php' ;

/** __autoload Funktion einrichten */
/*function __autoload ( $class ) {
	Zend_Loader::loadClass ( $class ) ;
}*/

/** lade Konfigurationsdaten mit Hilfe von Zend_Config und dem Hostnamen des Systems */
//$xmlFile = dirname ( __FILE__ ) . DIRECTORY_SEPARATOR . 'config/config.xml' ;
//$config1 = new Zend_Config_Xml ( $xmlFile, 'environments' ) ;


/*
 print_r($_ENV);
 print_r($_SERVER);
 print_r($_REQUEST);
*/
 
/*$useEnvironment = 'life';

foreach ($config1->environment as $environment){
		
	// For Windows:
	if(isset($_ENV['COMPUTERNAME']) && $_ENV['COMPUTERNAME']==$environment->hostname){
		$useEnvironment = $environment->id;
	}
	// For Linux/Unix:
	if(isset($_ENV['HOSTNAME']) && $_ENV['HOSTNAME']==$environment->hostname){
		$useEnvironment = $environment->id;
	}
	// for Test-Server (Linux), Mac
	if(isset($_SERVER["SERVER_ADMIN"]) && $_SERVER["SERVER_ADMIN"]==$environment->hostname){
		$useEnvironment = $environment->id;
	}
}*/

 /*print_r ($useEnvironment);
 exit;*/

/*$config = new Zend_Config_Xml ( $xmlFile, $useEnvironment ) ;
Zend_Registry::set ( 'config', $config ) ;
Zend_Registry::set ( 'basepath', dirname ( __FILE__ ) );
*/
/** erstelle Datenbankadapter mit Hilfe der Konfigurationsdaten */
/*$db = Zend_Db::factory ( $config->database->adapter, $config->database->params->toArray () ) ;
$db->getConnection () ;
$db->setFetchMode ( Zend_Db::FETCH_OBJ ) ;
$db->query ( 'SET names UTF8' ) ;
Zend_Db_Table::setDefaultAdapter ( $db ) ;
Zend_Registry::set ( 'db', $db ) ;
*/
/** initialize Cache */
/*
if($config->cache->enabled=='true') {
	$cacheEnabled = true;
} else {
	$cacheEnabled = false;
}

$frontendOptions = array(
	'lifetime' => 7200, // cache lifetime of 2 hours
	'automatic_serialization' => true,
	'caching' => $cacheEnabled
);

$backendOptions = array(
    'cache_dir' => '../tmp/' // Directory where to put the cache files
);
// getting a Zend_Cache_Core object
$cache = Zend_Cache::factory('Core', 'File', $frontendOptions, $backendOptions);
// add Cache object to registry
Zend_Registry::set ('cache',$cache);
*/
/** Front Controller initialisieren */
/*$front = Zend_Controller_Front::getInstance();
*/
/** anhand der Aufruf-URL (Subdomain) wird der korrekte Controller (Webseite, API) aufgerufen  */
/*if($_SERVER['SERVER_NAME']=='cocktailberater.de' OR
$_SERVER['SERVER_NAME']=='www.cocktailberater.de' OR
$_SERVER['SERVER_NAME']=='www-stage.cocktailberater.de') {

	// tell the front controller that there are modules
	$front->addModuleDirectory('../application/modules/');

	// set the proper controller directory for each modul
	$front->setControllerDirectory(
	array(	'default' => '../application/modules/default/controllers',
    		'api'    => '../application/modules/api/controllers',
			'test'    => '../application/modules/test/controllers' )
	);

	// a call on www.cocktailberater.de or www-stage.cocktailberater.de
	// will be routet to /default/index/index
	$website = array('module'=>'default','controller' => 'index','action' => 'index');
	$route = new Zend_Controller_Router_Route(':controller/:action/*',$website);
	$router = new Zend_Controller_Router_Rewrite();
	$router->addRoute('default',$route);

	// set the api-router as default router for this subdomain
	$front->setRouter($router);
} elseif(	$_SERVER['SERVER_NAME']=='api.cocktailberater.de' 
			OR $_SERVER['SERVER_NAME']=='api-stage.cocktailberater.de') {

	// tell the front controller that there are modules
	$front->addModuleDirectory('../application/modules/');

	// set the proper controller directory for each modul
	$front->setControllerDirectory(
	array(	'default' => '../application/modules/default/controllers',
    		'api'    => '../application/modules/api/controllers',
			'test'    => '../application/modules/test/controllers' )
	);

	// a call on api.cocktailberater.de or api-stage.cocktailberater.de
	// will be routet to /api/index/index
	$api = array('module'=>'api','controller' => 'index','action' => 'index');
	$route = new Zend_Controller_Router_Route(':controller/:action/*',$api);
	$router = new Zend_Controller_Router_Rewrite();
	$router->addRoute('api',$route);

	// set the api-router as default router for this subdomain
	$front->setRouter($router);
} elseif(	$_SERVER['SERVER_NAME']=='localhost'
			OR $_SERVER['SERVER_NAME']=='192.168.1.3'
			OR $_SERVER['SERVER_NAME']=='192.168.1.11'
			OR $_SERVER['SERVER_NAME']=='thobach.local'
			OR $_SERVER['SERVER_NAME']=='thobach.dyndns.org') {
	$front->addModuleDirectory('../application/modules/');
} else {
	print 'Ihr System wird noch nicht unterst&uuml;tzt.<br />';
	print_r ($_SERVER);
}

$front->throwExceptions ( $config->throwexceptions ) ;

// Place this in your bootstrap file before dispatching your front controller
$writer = new Zend_Log_Writer_Firebug();
$log = new Zend_Log($writer);
$log->addFilter(new Zend_Log_Filter_Priority(Zend_Log::CRIT));
Zend_Registry::set('logger',$log);
*/
/** Zend_Layout benutzen */
// Zend_Layout::startMvc(dirname ( __FILE__ ) . DIRECTORY_SEPARATOR . 'modules/default/views/layouts' );
/*Zend_Layout::startMvc();
*/
/** Anfrage ausfÃ¼hren */
/*$front->dispatch();
*/