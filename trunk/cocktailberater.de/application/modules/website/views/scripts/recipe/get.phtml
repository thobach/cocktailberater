<?php
print $this->partial('template/search.phtml',$this);
$this->dojo()->enable()->requireModule('dijit.Tooltip')->requireModule('dojox.image.Lightbox');
$this->dojo()->addStylesheet($this->dojo()->getCdnBase().$this->dojo()->getCdnVersion().'/dojox/image/resources/Lightbox.css');
$recipe = $this->recipe;
$photos = $recipe->getPhotos();
$videos = $recipe->getVideos();
$alternatives = $this->alternatives;
$gesamt = count($alternatives);
// ingredient list
foreach ( $recipe->getComponents() as $component ) {
	$ingredientList[] = $component->amount.' '.$component->unit.' '.$component->getIngredient()->name;
	$ingredientList2[] = $component->getIngredient()->name;
}
// setting meta keywords
$this->headMeta()->appendName('keywords', $recipe->name.', '.implode($ingredientList2,', ').', cocktail, rezept, cocktails, rezepte, cocktailrezepte, cocktailrezept, cocktailberater');
// setting meta description
$this->headMeta()->appendName('description', 'Das  Rezept des '.$recipe->name.' Cocktails besteht aus '.implode($ingredientList,', ').'. Mehr mit Beschreibung, Anweisung, Fotos, Videos und Kommentaren hier.');
?>
<div>
<div style="float: right;"><img 
	src="<?php
	if(isset($photos[0]) && $photos[0]->fileName) { 
		echo $this->baseUrl() .'/img/recipes/'. $photos[ 0 ]->fileName ;
	} else {
	 	echo $this->baseUrl().'/img/glasses/'.$recipe->getGlass()->getPhoto()->originalFileName;
	}
	?>"
	alt="<?php
	print str_replace ( '\\', '', $recipe->name ) ;
	?>"
	title="<?php
	print str_replace ( '\\', '', $recipe->name ) ;
	?>"
	style="margin-right: 1.6em; width: 160px; margin-top: 0.2em; margin-bottom: 20px;" />
<div id="photo_video">
	<?php
	if (sizeof($videos)>0) {
		?><a href="#videoAnchor"><img src="<?php
	print $this->baseUrl() ;
	?>/img/video.png" alt="Video"
	title="Video" height="22" width="26"
	style="margin-right: 10px; margin-top: 4px; vertical-align: top;"
	onclick="document.getElementById('video').style.display='block';" /></a><?php
	}
	$i = 0 ;
	if(is_array($photos)){
		foreach ( $photos as $photo ) {
			$i ++ ;
			?><a
	href="<?php echo $this->baseUrl() .'/img/recipes/' . $photo->originalFileName ; ?>" 
	dojoType="dojox.image.Lightbox" group="one" 
	title="<?php print str_replace ( '\\', '', $recipe->name ) ; ?>"><?php
	if ($i == 1) {
		?><img src="<?php
		print $this->baseUrl() ;
		?>/img/foto.png" alt="Fotos" height="21" width="28"
	title="Fotos"
	style="margin-left: 10px; margin-top: 4px; vertical-align: top; margin-bottom: 20px;" /><?php
	}
	?></a><?php
		}
	}
	?></div>
</div>
<!-- class="right" -->
<div style="margin-left: 25px; margin-top: 15px">
<div class="attribut">Name:</div>
<div class="wert"><?php
print str_replace ( '\\', '', $recipe->name ) ;
if($recipe->isOriginal){
	print  ' (original)';
}
if(!$recipe->isAlcoholic()){
	print  ' (alkoholfrei)';
}
?></div>
<?php if($recipe->description){?><div class="attribut">Beschreibung:</div>
<div class="wert"><p><?php
print str_replace("\n",'</p><p>',$recipe->description);
?></p></div><?php } ?>
<div class="attribut">Zutaten:</div>
<div class="wert"><p><strong>Cocktail</strong></p><ul><?php
foreach ( $recipe->getComponents() as $component ) {
	print '<li>';
	print $component->amount ;
	print ' ' ;
	print $component->unit ;
	print ' ' ;
	?>
	<?php $this->headScript()->captureStart(); ?>
	dojo.addOnLoad(function() {
		zutat<?php print $component->getIngredient()->id ;?>Tooltip = new dijit.Tooltip({
            connectId: ["zutat<?php print $component->getIngredient()->id ;?>"],
            label: "<?php
$alcoholLevel = $component->getIngredient()->getAverageAlcoholLevel();
$calories = $component->getIngredient()->getAverageCaloriesKcal();
$categories = $component->getIngredient()->getIngredientCategories();
$products = $component->getIngredient()->getProducts();
?><div style=\"text-align:left;\"><?php
if($alcoholLevel){ ?><span class=\"pink\">Alkoholgehalt:</span> <?php print $alcoholLevel; ?> %<br /><?php }
if($calories) { ?><span class=\"pink\">Kalorien:</span> <?php print round($calories/10); ?> kcal pro 100 ml<br /><?php } 
if($categories) {?><span class=\"pink\">Kategorie(n):</span> <?php
	if(is_array($categories)){
		foreach ($categories as $category) {
			print $category->name.'<br />';
		}
	}
}
if($products) { ?><span class=\"pink\">Produkte:</span><?php
	if(is_array($products)){
		print '<ul style=\"font-size: 0.9em; list-style-type: circle; margin-left: 2em;\">';
		foreach ($products as $product) {
			print '<li>' . $product->name .' ('.$product->getManufacturer()->name.') - ' .
			str_replace('.', ',', round ( $product->size, 2 )) . ' ' . $product->unit . '</li>';
		}
		print "</ul>";
	}
}
if(!($alcoholLevel || $calories || $categories || $products)){
	print 'Leider sind noch keine<br />Informationen zu dieser<br />Zutat vorhanden, wir<br />arbeiten daran ;)';
}
?></div>"
        });
    });
	<?php $this->headScript()->captureEnd(); ?>
	<a id="zutat<?php print $component->getIngredient()->id ;?>"
	href="<?php print $this->url(array('module'=>'website','controller'=>'ingredient',
		'id'=>$component->getIngredient()->getUniqueName()),null,true); ?>"
	title="<?php echo $this->escape ( str_replace ( '\\', '', $component->getIngredient()->name ) ) ?>">
	<?php print $component->getIngredient()->name ; ?></a></li>
	<?php
} // foreach
?></ul><p class="abstand_oben"><strong>Dekoration</strong></p><ul><li>Früchte nach Belieben.</li></ul></div>
<div class="attribut">Anweisung:</div>
<div class="wert"><p><?php
print str_replace("\n",'</p><p>',$recipe->instruction);
?></p></div>
<div class="attribut">Schlagworte / Tags:<br />
<span id="switcha1"
	onclick="document.getElementById('tag_form').style.display='block'; document.getElementById('switcha1').innerHTML=''; dojo.byId('newtag').focus();"
	style="cursor: pointer; color: #54616E">(hinzufügen)</span></div>
<div class="wert"><?php
$tagCloud =  Website_Model_Tag::getRecipeTagCloud($recipe->id);
require_once(APPLICATION_PATH.'/Wb/Decorator/HtmlTag.php');
$decorator = new Wb_Decorator_HtmlTag();
$decorator->setView($this);
$tagCloud->setTagDecorator($decorator);
echo $tagCloud;
?>
<?php
// dojo helper
$this->addHelperPath('Zend/Dojo/View/Helper/', 'Zend_Dojo_View_Helper');
// enable dojo with custom module (readStore), parser, and comboBox
$this->dojo()->enable()
->registerModulePath('custom', $this->baseUrl().'/js/custom')
->requireModule('dojo.parser')
->requireModule('dojox.data.QueryReadStore')
->requireModule('dijit.form.ComboBox')
->requireModule('custom.TagReadStore');
// define url for autoCompletion
$autoCompletionUrl = array('action'=>'index','controller'=>'recipe','module'=>'website','format'=>'ajax','index'=>'index');
?>
<div dojoType="custom.TagReadStore" jsId="tagStore" url="<?php echo $this->url($autoCompletionUrl); ?>"
	requestMethod="get"></div>
<?php $this->headScript()->captureStart(); ?>
// configure query
djConfig.usePlainJson=true;

function initTag() {
	dojo.connect(dojo.byId("newtag"), 'onfocus', function(e) { // onkeypress
		/*
		// add the possibility to submit the search by pressing the ENTER key 
		if (e.keyCode == dojo.keys.ENTER) { 
			dojo.byId('tag_form').submit(); 
		}
		*/
		// hide tag_state onfocus
		dojo.removeClass("tag_state");
		dojo.addClass("tag_state","hide");
	});
}
dojo.addOnLoad(initTag);

function newSubmit(){
	// add new tag to list
	var listEntry = document.createElement("li");
	var listEntryLink = document.createElement("a");
	var listEntryText = document.createTextNode(" " + dojo.byId("newtag").value);
	listEntryLink.rel = "tag";
	listEntryLink.style.fontSize = "10px";
	listEntryLink.href = "/website/recipe/index/search_type/tag/search/" + dojo.byId("newtag").value;
	listEntryLink.appendChild(listEntryText);
	listEntry.appendChild(listEntryLink);
	dojo.query(".Zend_Tag_Cloud").forEach(function(node, index, arr){
		node.appendChild(listEntry);
	});
    // clear form and tag_state
    clearTagFormError();
    dojo.removeClass("tag_state");
    dojo.addClass("tag_state","success");
    dojo.byId("tag_state").innerHTML="Dein Tag wurde hinzugefügt.";
}

// sumbit the form 
var tagFormSubmit = function(e){
    // prevent the form from actually submitting
    e.preventDefault(); 
    // submit the form in the background    
    dojo.xhrPost({
        url: "<?=$this->url(array('controller'=>'tag','action'=>'post','module'=>'website'),null,true)?>?format=json",
        form: "tag_form",
        handleAs: "json",
        handle: function(data,args){
            if (data.rsp["@attributes"].status == "ok"){
            	newSubmit();
            }
            else{
                clearTagFormError();
            	dojo.removeClass("tag_state");
            	dojo.addClass("tag_state","error");
            	dojo.byId("tag_state").innerHTML="Es ist ein Fehler aufgetreten. Bitte versuch es später nochmal.";
            }
        }
    });
};

// add the possibility to submit the search by pressing the ENTER key
var tagFormSubmit2 = function(e){
	if (e.keyCode == dojo.keys.ENTER) { 
    // prevent the form from actually submitting
    e.preventDefault(); 
    // submit the form in the background    
    dojo.xhrPost({
        url: "<?=$this->url(array('controller'=>'tag','action'=>'post','module'=>'website'),null,true)?>?format=json",
        form: "tag_form",
        handleAs: "json",
        handle: function(data,args){
            if (data.rsp["@attributes"].status == "ok"){
            	newSubmit();
            }
            else{
                clearTagFormError();
            	dojo.removeClass("tag_state");
            	dojo.addClass("tag_state","error");
            	dojo.byId("tag_state").innerHTML="Es ist ein Fehler aufgetreten. Bitte versuch es später nochmal.";
            }
        }
    });
    }
};

dojo.addOnLoad(function(){
    var tagForm = dojo.byId("tag_form");
    // another dojo.connect syntax: call a function directly    
    dojo.connect(tagForm,"onsubmit",tagFormSubmit);
    dojo.connect(dojo.byId("newtag"), 'onkeypress', tagFormSubmit2);
});
function clearTagFormError(){
	dojo.removeClass("tag_state");
	dojo.addClass("tag_state","hide");
    dojo.byId("newtag").value="";
}
<?php $this->headScript()->captureEnd(); ?>
<form id="tag_form" class="regular_form hide abstand_oben abstand_unten" method="post"
	action="<?php print $this->url(array('module'=>'website','controller'=>'tag'),null,true); ?>">
	<fieldset>
		<legend>Schlagwort / Tag hinzufügen</legend>
		<div id="tag_state" class="hide">&nbsp;</div>
		<label for="newtag" class="hide">Dein Tag:</label>
		<!-- text input w/ autocompletion -->
		<?php 
			$autoCompletetionInputOptions = array('dojoType'=>array('dijit.form.ComboBox'),'store'=>'tagStore','autoComplete'=>'false','hasDownArrow'=>'false'); 
			echo $this->formText('newtag',null,$autoCompletetionInputOptions);
		?>
		<input name="recipe" value="<?php print $recipe->id; ?>" type="hidden" />
		<input type="submit" class="small-button" value="Tag hinzufügen"
			style="background-image: url('<?php echo $this->baseUrl(); ?>/img/general-button-small4.png'); font-size: 0.9em;" />
	</fieldset>
</form>
</div>
<?php $this->headScript()->captureStart(); ?>
// sumbit the form 
var ratingFormSubmit = function(e){
    // prevent the form from actually submitting
    e.preventDefault(); 
    // submit the form in the background    
    dojo.xhrPost({
        url: "<?=$this->url(array('controller'=>'rating','action'=>'post','module'=>'website'),null,true)?>?format=json",
        form: "rating_form",
        handleAs: "json",
        handle: function(data,args){
            if (data.rsp["@attributes"].status == "ok"){
            	clearRatingFormError();
            	dojo.removeClass("rating_state");
            	dojo.addClass("rating_state","success");
            	dojo.byId("rating_state").innerHTML="Deine Bewertung wurde hinzugefügt.";
            }
            else if (data.rsp["@attributes"].status == "error"){
            	clearRatingFormError();
            	dojo.removeClass("rating_state");
            	dojo.addClass("rating_state","error");
            	dojo.byId("rating_state").innerHTML="Du hast schon abgestimmt!";
            }
            else {
                clearRatingFormError();
            	dojo.removeClass("rating_state");
            	dojo.addClass("rating_state","error");
            	dojo.byId("rating_state").innerHTML="Es ist ein Fehler aufgetreten. Bitte versuch es später nochmal.";
            }
        }
    });
};
dojo.addOnLoad(function(){
    var ratingForm = dojo.byId("rating_form");
    // another dojo.connect syntax: call a function directly    
    dojo.connect(ratingForm,"onsubmit",ratingFormSubmit);
});
function clearRatingFormError(){
	dojo.removeClass("rating_form")
	dojo.addClass("rating_form","hide")
}
<?php $this->headScript()->captureEnd(); ?>
<div class="attribut">Bewertung:</div>
<div class="wert"><?php
$durchschnitt = $this->recipe->getRating();
?>
	<div id="rating_state" class="hide">&nbsp;</div>
	<form id="rating_form" action="<?php print $this->url(array('module'=>'website','controller'=>'rating'),null,true); ?>" method="post">
	<?php for($rating = 1; $rating <= 5; $rating++){
	?><button type="submit" id="rating<?php echo $rating; ?>"
		onclick="document.getElementById('rating').value='<?php echo $rating; ?>';" 
		onmouseover="document.getElementById('img_rating<?php echo $rating; ?>').src='<?php print $this->baseUrl() ; ?>/img/1_stars_pink.png';<?php 
			for($rating2=1; $rating2 <= $rating; $rating2++){ 
				echo "document.getElementById('img_rating$rating2').src='{$this->baseUrl()}/img/1_stars_pink.png';";
			}
		?>"
		onmouseout="document.getElementById('img_rating<?php echo $rating; ?>').src='<?php print $this->baseUrl() ; ?>/img/<?php echo ($durchschnitt >= $rating) ? '1_stars.png' : 'not_yet_rated_1.png' ; ?>';<?php 
			for($rating2=1; $rating2 <= $rating; $rating2++){ 
				if($durchschnitt >= $rating2){
					echo "document.getElementById('img_rating$rating2').src='{$this->baseUrl()}/img/1_stars.png';";
				} else {
					echo "document.getElementById('img_rating$rating2').src='{$this->baseUrl()}/img/not_yet_rated_1.png';";
				}
			}
		?>">
		<img id="img_rating<?php echo $rating; ?>" src="<?php print $this->baseUrl() ; ?>/img/<?php echo ($durchschnitt >= $rating) ? '1_stars.png' : 'not_yet_rated_1.png' ; ?>" height="18" width="18" alt="rate.." /></button><?php } ?>
	<input name="recipe" type="hidden" value="<?php echo $recipe->id; ?>" />
	<input name="rating" id="rating" type="hidden" value="" />
	&nbsp;(Anzahl Stimmen: <?php print $this->recipe->ratingsCount.' - Ø ' . 
		number_format ( $this->recipe->getRating(), 2, ',', '' ) ; ?>)
</form></div>
<div class="attribut">Rezeptquelle:</div>
<div class="wert"><?php if($recipe->source) {
	print $recipe->source;
} else {
	?>-keine angegeben-<?php } ?></div>	
	<?php $this->headScript()->captureStart(); ?>
// hide all comments
function hideComments() {
	dojo.byId('commentList').style.display='none';
	dojo.byId('comment_form').style.display='none';
	dojo.byId('switchc1').style.display='block';
	dojo.byId('switchb1').style.display='block';
	dojo.byId('switchb1').innerHTML='(einfügen)';
	dojo.byId('switchc1').innerHTML='<?php $amountOfComments = count($this->recipe->getComments()); echo $amountOfComments; ?> Kommentar(e) anzeigen';
}
// show all comments and new comment form 
function showComments() {
	dojo.byId('commentList').style.display='block';
	dojo.byId('switchc1').innerHTML='';
	dojo.byId('comment_form').style.display='block';
	dojo.byId('switchb1').innerHTML='';
}
// only hide comments when anchor is not set in url
if(!(location.hash=='#comment-insert' || location.hash=='#comments')){ 
	dojo.addOnLoad(hideComments);
}
	<?php $this->headScript()->captureEnd(); ?>
<div class="attribut"><a name="comments" class="nolink">Kommentare:</a><br />
<a id="switchb1" class="hide" href="#comment-insert"
	onclick="showComments();"
	style="cursor: pointer; color: #54616E"></a></div>
<div class="wert"><a id="switchc1" href="#comments" class="hide"
	onclick="showComments();"
	style="cursor: pointer; color: #54616E"></a>
	<ul id="commentList"><?php
	if (is_array ( $this->recipe->getComments() )) {
		foreach ( $this->recipe->getComments() as $comment ) {
			print '<li style="border-bottom: 1px solid rgb(170, 16, 97); margin-bottom: 0.5em;"><p>#'.($amountOfComments--).' von <em>' ;
			if ($comment->memberId) {
				$member = new Website_Model_Member ( $comment->memberId ) ;
				print '<a href="mailto:' . $this->escape($member->email) . '">' . $this->escape(stripslashes($member->firstname)) . ' ' . $this->escape(stripslashes($member->lastname)) . '</a>' ;
			} else {
				print 'anonym' ;
			}
			print '</em> am '.$comment->insertDate;
			print '<br />'.stripslashes(str_replace (array("\r\n", "\r", "\n",'\r\n', '\r', '\n'),'</p><p>',$this->escape($comment->comment))) . '</p></li>' ;
		}
	} else {
		print 'keine Kommentare vorhanden' ;
	}
	?></ul>
<form id="comment_form" class="regular_form"
	style="margin-top: 1em;"
	action="<?php print $this->url(array('module'=>'website','controller'=>'comment'),null,true); ?>#comment-insert"
	method="post">
<fieldset>
	<legend><a name="comment-insert">Kommentar hinzufügen</a></legend>
	<?php if($this->comment_error) { ?>
		<p class="error"><?php print $this->comment_error; ?></p>
	<?php }
	if($this->comment_success) { ?>
		<p class="success"><?php print $this->comment_success; ?></p>
	<?php } 
	if(!$this->comment_success) { ?>
	<label for="comment" class="clear pink left">Dein Kommentar (reiner Text):</label>  
	<textarea name="comment" id="comment" class="clear text pink left abstand_unten"><?php if($this->comment_error) { print $_POST['comment']; } ?></textarea>
	<?php 
	$captcha = new Zend_Captcha_ReCaptcha(array(
	    'name' => 'captcha',
		'privKey' => '6LdKvggAAAAAADoKDLXugjbiSxuTc7zdrAVm8-qC',
		'pubKey' => '6LdKvggAAAAAAAhu1rSAwtIm1Ejzls4LDi0K27Td',
		'width' => 100,
		'height' => 50,
		'font' => APPLICATION_PATH.'/modules/website/captcha/fonts/arial.ttf',
		'imgDir' => realpath(APPLICATION_PATH.'/../public/img/captchas/'),
		'imgUrl' => $this->baseUrl().'/img/captchas/',
	    'expiration' => 300,
	));
	$captcha->getService()->setOption('lang','de');
	echo $captcha->render($this);
?><input type="hidden" name="recipe" value="<?php echo $this->recipe->id; ?>" />
<input type="submit" class="right clear small-button"
	style="background-image: url('<?php echo $this->baseUrl(); ?>/img/general-button-small4.png'); margin-top: 0.5em; margin-right: 3px;" value="abschicken"
	name="submit" /><?php } ?></fieldset>
</form>
</div>
<?php if($gesamt>1) { ?>
	<div class="attribut">Rezept- alternativen:</div>
	<div class="wert">
	<ul class="nolist">
	<?php
	foreach ($alternatives as $alternative) { ?>
		<li><?php $this->cocktailPreview($alternative); ?></li>
	<?php 
	} ?>
	</ul>
	</div>
	<?php } ?>
</div>
<!-- class=left -->
<div id="video" style="display: none;"><?php
if ($videos) {
	$i = 0 ;
	foreach ( $videos as $video ) {
		?>
<div id="box"
	style="float: left; clear: both; width: 440px; margin-left: 110px">
	<p style="text-align: left; padding: 0.5em;">
			<strong>
				<?php echo $video->name; ?></strong></p><object
	width="425" height="350">
	<param name="movie"
		value="<?php
		echo $this->escape ( $video->url ) ;
		?>" />
	<param name="wmode" value="transparent" />
	<embed src="<?php
		echo $this->escape ( $video->url ) ;
		?>"
		type="application/x-shockwave-flash" wmode="transparent" width="425"
		height="350" /></object>
		<?php if($video->description!='') { ?>
		<p style="text-align: left; padding: 0.5em;">
			<em><strong>Videohinweis:</strong>
				<?php echo $video->description; ?></em>
		</p>
		<?php } ?>
</div><?php
	}
} else {
	?>
<div id="box"
	style="float: left; clear: both; width: 440px; margin-left: 110px">Kein
Video gefunden.</div>
	<?php
}
?></div>
<div id="recipe_info" class="left">
<a name="videoAnchor" id="videoAnchor"></a>
<div class="left icon" style="left: 270px;"><img
	src="<?php
	print $this->baseUrl() ;
	?>/img/zeit.png" alt="Zeitaufwand"
	title="Zeitaufwand" height="42" width="43" /><br />
	<?php
	print $recipe->workMin;
	?> min</div>
<div class="left icon" style="left: 180px;"><img
	src="<?php
	print $this->baseUrl() ;
	?>/img/<?php
	if ($recipe->difficulty == Website_Model_Recipe::BEGINNER) {
		print "difficulty/beginner.png" ;
		$difficultyMessage = 'Anfänger';
	}
	else if ($recipe->difficulty == Website_Model_Recipe::ADVANCED) {
		print "difficulty/advanced.png" ;
		$difficultyMessage = 'Fortgeschritten';
	}
	else if ($recipe->difficulty == Website_Model_Recipe::PROFI) {
		print "difficulty/professional.png" ;
		$difficultyMessage = 'Profi';
	} else {
		// TODO: Bild erstellen, welches ausdrückt, dass es keine Information dazu gibt...
		print "difficulty/unknown.png" ;
		$difficultyMessage = 'nicht eingestuft';
	}
	?>" 
	alt="Schwierigkeitsgrad <?php
	print $difficultyMessage;
	?>"
	title="Schwierigkeitsgrad <?php
	print $difficultyMessage;
	?>" /><br />
	<?php
	print $difficultyMessage
	;
	?></div>
<div class="left icon" style="left: 0px;"><img
	src="<?php
	echo $this->baseUrl() .'/img/glasses/'. $recipe->getGlass()->getPhoto()->fileName ;
	?>"
	alt="Glas <?php
	print $recipe->getGlass()->name ;
	?>"
	title="Glas <?php
	print $recipe->getGlass()->name ;
	?>" /><br />
	<?php
	print $recipe->getGlass()->name ;
	?></div>
	<?php $this->headScript()->captureStart(); ?>
	dojo.addOnLoad(function() {
		caloriesInfoTooltip = new dijit.Tooltip({
			connectId: ["caloriesInfo"],
			label: "<?php
				$calories = $recipe->getCaloriesKcal();
				$components = $recipe->getComponents();
				$caloriesComplete = true;
				if(is_array($components)){
					foreach ($components as $component) {
						if(!$component->getCaloriesKcal()){
							$caloriesComplete = false;
						}
						$caloriesList .= '<li>'.$component->amount.' '.$component->unit.' '.$component->getIngredient()->name . ': ' .
							($component->getCaloriesKcal() ? round($component->getCaloriesKcal()).' kcal' : ' k.a. ').'</li>';
					}
				}
				?><div style=\"text-align:left;\"><?php 
				?><span class=\"pink\">Gesamtkalorien:</span> <?php
				if(!$caloriesComplete){
					print 'über ';
				}
				print $calories; ?> kcal<br /><?php
				?><span class=\"pink\">Kalorienaufteilung:</span><ul style=\"font-size: 0.9em; list-style-type: circle; margin-left: 2em;\"><?php
					print $caloriesList;
				?></ul></div>"
        });
    });
	<?php $this->headScript()->captureEnd(); ?>
<div class="left icon" style="left: 360px;" id="caloriesInfo"><img
	src="<?php
	print $this->baseUrl() ;
	?>/img/calories.png" alt="Kalorien" height="48" width="33"
	title="Kalorien" /><br />
	<?php
	if(!$caloriesComplete){
		print 'über ';
	}
	print '<nobr>'.$recipe->getCaloriesKcal();
	?> kcal</nobr></div>
<div class="left icon" style="left: 450px;"><img  height="42" width="34"
	src="<?php
	print $this->baseUrl() ;
	?>/img/prozent.png" alt="Alkoholgehalt"
	title="Alkoholgehalt" /><br />
	<?php
	print round($recipe->getAlcoholLevel());
	?> % Alkohol</div>
<div class="left icon" style="left: 90px;"><img  height="47" width="25"
	src="<?php
	print $this->baseUrl() ;
	?>/img/volumen.png" alt="Volumen"
	title="Volumen" /><br />
	<?php
	print $recipe->getVolumeCl() ;
	?> cl</div>
</div>
</div>